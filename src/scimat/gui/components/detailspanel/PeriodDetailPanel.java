/*
 * WordDetailPanel.java
 *
 * Created on 28-ene-2009, 10:42:51
 */
package scimat.gui.components.detailspanel;

import java.util.ArrayList;
import scimat.model.knowledgebase.entity.Period;
import scimat.model.knowledgebase.exception.KnowledgeBaseException;
import scimat.project.CurrentProject;

/**
 *
 * @author Manuel Jes√∫s Cobo Martin
 */
public class PeriodDetailPanel extends GenericDetailPanel<Period> {

  /** 
   * Creates new form WordDetailPanel
   */
  public PeriodDetailPanel() {
    initComponents();

    CurrentProject.getInstance().getKbObserver().addPeriodObserver(this);
  }

  /**
   *
   */
  public void reset() {

    idTextField.setText("");
    nameTextField.setText("");
    positionSpinner.setValue(1);

    setEnableTextField(false);
  }

  /**
   *
   */
  public void setEnableTextField(boolean enabled) {

    idTextField.setEnabled(enabled);
    nameTextField.setEnabled(enabled);
  }

  /**
   * 
   * @param period
   */
  public void refreshItem(Period period) {

    this.period = period;

    if (period != null) {

      idTextField.setText(this.period.getPeriodID().toString());
      nameTextField.setText(this.period.getName());
      positionSpinner.setValue(this.period.getPosition());

      setEnableTextField(true);

    } else {

      reset();

    }
  }

  /**
   * 
   * @return
   */
  public String getPeriodName() {

    return nameTextField.getText();
  }

  /**
   * 
   * @return
   */
  public int getPosition() {

    return (Integer)positionSpinner.getValue();
  }

  /**
   *
   * @param items
   * @throws KnowledgeBaseException
   */
  public void entityAdded(ArrayList<Period> items) throws KnowledgeBaseException {
    // Do Nothing
  }

  /**
   *
   * @throws KnowledgeBaseException
   */
  public void entityRefresh() throws KnowledgeBaseException {
    // Do Nothing
  }

  /**
   * 
   * @param items
   * @throws KnowledgeBaseException
   */
  public void entityUpdated(ArrayList<Period> items) throws KnowledgeBaseException {

    int position;

    position = items.indexOf(this.period);

    if (position != -1) {

      refreshItem(items.get(position));

    }
  }

  public void entityRemoved(ArrayList<Period> items) throws KnowledgeBaseException {
    // Do Nothing
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    idDescriptionLabel = new javax.swing.JLabel();
    idTextField = new javax.swing.JTextField();
    nameDescriptionLabel = new javax.swing.JLabel();
    nameTextField = new javax.swing.JTextField();
    positionDescriptionLabel = new javax.swing.JLabel();
    positionSpinner = new javax.swing.JSpinner();

    idDescriptionLabel.setText("ID:");

    idTextField.setEnabled(false);

    nameDescriptionLabel.setText("Name:");

    positionDescriptionLabel.setText("Position");

    positionSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(nameDescriptionLabel)
          .addComponent(idDescriptionLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
      .addGroup(layout.createSequentialGroup()
        .addComponent(positionDescriptionLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(positionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(170, 170, 170))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(idDescriptionLabel)
          .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(nameDescriptionLabel)
          .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(positionDescriptionLabel)
          .addComponent(positionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel idDescriptionLabel;
  private javax.swing.JTextField idTextField;
  private javax.swing.JLabel nameDescriptionLabel;
  private javax.swing.JTextField nameTextField;
  private javax.swing.JLabel positionDescriptionLabel;
  private javax.swing.JSpinner positionSpinner;
  // End of variables declaration//GEN-END:variables
  private Period period;
}
