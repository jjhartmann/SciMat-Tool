/*
 * AuthorDetailPanel.java
 *
 * Created on 26-nov-2008, 19:59:00
 */
package scimat.gui.components.detailspanel;

import java.util.ArrayList;
import scimat.model.knowledgebase.entity.Author;
import scimat.model.knowledgebase.exception.KnowledgeBaseException;
import scimat.project.CurrentProject;



/**
 *
 * @author Manuel Jesus Cobo Martin.
 */
public class AuthorDetailPanel extends GenericDetailPanel<Author> {

  /** 
   * Creates new form AuthorDetailPanel
   */
  public AuthorDetailPanel() {
    initComponents();

    CurrentProject.getInstance().getKbObserver().addAuthorObserver(this);
  }

  /**
   *
   */
  public void reset() {

    idTextField.setText("");
    authorNameTextField.setText("");
    fullAuthorNameTextField.setText("");

    setEnableTextField(false);
  }

  /**
   *
   */
  public void setEnableTextField(boolean enabled) {

    idTextField.setEnabled(enabled);
    authorNameTextField.setEnabled(enabled);
    fullAuthorNameTextField.setEnabled(enabled);
  }

  /**
   * 
   * @param author
   */
  public void refreshItem(Author author) {

    this.author = author;

    if (author != null) {

      idTextField.setText(this.author.getAuthorID().toString());
      authorNameTextField.setText(this.author.getAuthorName());
      fullAuthorNameTextField.setText(this.author.getFullAuthorName());

      setEnableTextField(true);

    } else {

      reset();

    }
  }

  /**
   *
   * @return
   */
  public String getAuthorName() {

    return authorNameTextField.getText();
  }

  /**
   * 
   * @return
   */
  public String getFullAuthorName() {

    return fullAuthorNameDescriptionLabel.getText();
  }

  public void entityUpdated(ArrayList<Author> items) throws KnowledgeBaseException {

    int position;

    position = items.indexOf(this.author);

    if (position != -1) {

      refreshItem(items.get(position));

    }
  }

  public void entityAdded(ArrayList<Author> items) throws KnowledgeBaseException {
    // Do Nothing
  }

  public void entityRefresh() throws KnowledgeBaseException {
    // Do Nothing
  }

  public void entityRemoved(ArrayList<Author> items) throws KnowledgeBaseException {
    // Do Nothing
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    idDescriptionLabel = new javax.swing.JLabel();
    idTextField = new javax.swing.JTextField();
    authorNameDescriptionLabel = new javax.swing.JLabel();
    authorNameTextField = new javax.swing.JTextField();
    fullAuthorNameDescriptionLabel = new javax.swing.JLabel();
    fullAuthorNameTextField = new javax.swing.JTextField();

    idDescriptionLabel.setText("ID:");

    idTextField.setEditable(false);

    authorNameDescriptionLabel.setText("Name:");

    fullAuthorNameDescriptionLabel.setText("Full author name:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(idDescriptionLabel)
          .addComponent(authorNameDescriptionLabel)
          .addComponent(fullAuthorNameDescriptionLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addComponent(authorNameTextField)
          .addComponent(fullAuthorNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(idDescriptionLabel)
          .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(authorNameDescriptionLabel)
          .addComponent(authorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(fullAuthorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(fullAuthorNameDescriptionLabel)))
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel authorNameDescriptionLabel;
  private javax.swing.JTextField authorNameTextField;
  private javax.swing.JLabel fullAuthorNameDescriptionLabel;
  private javax.swing.JTextField fullAuthorNameTextField;
  private javax.swing.JLabel idDescriptionLabel;
  private javax.swing.JTextField idTextField;
  // End of variables declaration//GEN-END:variables
  private Author author;
}
