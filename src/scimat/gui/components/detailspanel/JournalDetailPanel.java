/*
 * JournalDetailPanel.java
 *
 * Created on 19 de noviembre de 2008, 18:34
 */
package scimat.gui.components.detailspanel;

import java.util.ArrayList;
import scimat.model.knowledgebase.entity.Journal;
import scimat.model.knowledgebase.exception.KnowledgeBaseException;
import scimat.project.CurrentProject;

/**
 *
 * @author  Manuel Jesus Cobo Martin.
 */
public class JournalDetailPanel extends GenericDetailPanel<Journal> {

  /** 
   * Creates new form JournalDetailPanel 
   */
  public JournalDetailPanel() {
    initComponents();

    CurrentProject.getInstance().getKbObserver().addJournalObserver(this);
  }
  
  /**
   * 
   */
  public void reset() {

    idTextField.setText("");
    sourceTextField.setText("");
    conferenceInformationTextField.setText("");

    setEnableTextField(false);
  }

  /**
   *
   */
  public void setEnableTextField(boolean enabled) {

    idTextField.setEnabled(enabled);
    sourceTextField.setEnabled(enabled);
    conferenceInformationTextField.setEnabled(enabled);
  }

  /**
   * 
   * @param journal
   */
  public void refreshItem(Journal journal) {

    this.journal = journal;

    if (journal != null) {

      idTextField.setText(this.journal.getJournalID().toString());
      sourceTextField.setText(this.journal.getSource());
      conferenceInformationTextField.setText(this.journal.getConferenceInformation());

      setEnableTextField(true);

    } else {

      reset();

    }
  }

  /**
   * 
   * @param editable
   */
  public void setEditable(boolean editable) {
  
    sourceTextField.setEditable(editable);
    conferenceInformationTextField.setEditable(editable);
  }

  /**
   * 
   * @return
   */
  public String getSource() {

    return sourceTextField.getText();
  }

  /**
   *
   * @return
   */
  public String getConferenceInformation() {

    return conferenceInformationTextField.getText();
  }

  public void entityAdded(ArrayList<Journal> items) throws KnowledgeBaseException {
    // Do Nothing
  }

  public void entityRefresh() throws KnowledgeBaseException {
    // Do Nothing
  }

  public void entityUpdated(ArrayList<Journal> items) throws KnowledgeBaseException {

    int position;

    position = items.indexOf(this.journal);

    if (position != -1) {

      refreshItem(items.get(position));

    }
  }

  public void entityRemoved(ArrayList<Journal> items) throws KnowledgeBaseException {
    // Do Nothing
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    idDescriptionLabel = new javax.swing.JLabel();
    idTextField = new javax.swing.JTextField();
    sourceDescriptionLabel = new javax.swing.JLabel();
    sourceTextField = new javax.swing.JTextField();
    conferenceInformationTextField = new javax.swing.JTextField();
    conferenceInformationDescriptionLabel = new javax.swing.JLabel();

    idDescriptionLabel.setText("ID:");

    idTextField.setEditable(false);

    sourceDescriptionLabel.setText("Source:");

    conferenceInformationDescriptionLabel.setText("ISSN:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(idDescriptionLabel)
          .addComponent(sourceDescriptionLabel)
          .addComponent(conferenceInformationDescriptionLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(sourceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
          .addComponent(conferenceInformationTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
          .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(0, 0, 0))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(idDescriptionLabel)
          .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(sourceDescriptionLabel)
          .addComponent(sourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(conferenceInformationDescriptionLabel)
          .addComponent(conferenceInformationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel conferenceInformationDescriptionLabel;
  private javax.swing.JTextField conferenceInformationTextField;
  private javax.swing.JLabel idDescriptionLabel;
  private javax.swing.JTextField idTextField;
  private javax.swing.JLabel sourceDescriptionLabel;
  private javax.swing.JTextField sourceTextField;
  // End of variables declaration//GEN-END:variables
  private Journal journal;
}
