/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StatisticBarChartPanel.java
 *
 * Created on 25-ene-2012, 19:12:16
 */
package scimat.gui.components.statistic;

import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import scimat.model.statistic.entity.StatisticPerPeriod;

/**
 *
 * @author mjcobo
 */
public class StatisticBarChartPanel extends javax.swing.JPanel {

  /** Creates new form StatisticBarChartPanel */
  public StatisticBarChartPanel() {
    
    initComponents();
    
    this.dataset = new DefaultCategoryDataset();
    
    this.chart = ChartFactory.createBarChart("", "", "", dataset, 
            PlotOrientation.VERTICAL, false, false, false);
   
    this.chartPanel = new ChartPanel(chart);
    
    this.barChartPanel.add(this.chartPanel);
  }
  
  /**
   * 
   * @param stats 
   */
  public void refresh(ArrayList<StatisticPerPeriod> stats) {
  
    this.stats = stats;
    //this.documentsCountRadioButton.setSelected(true);
    this.documentsCountRadioButton.doClick();
  }
  
  /**
   * 
   * @param selection 
   */
  private void refreshChart(SelectedChart selection) {
  
    int i;
    String title, label;
    StatisticPerPeriod stat;
    
    this.dataset = new DefaultCategoryDataset();
    
    switch (selection) {

      case Documents:
        title = "Documents per period";
        label = "Documents";
        break;

      case Units:
        title = "Unique units of analysis";
        label = "Units";
        break;

      case Max:
        title = "Max units per document";
        label = "Units";
        break;

      case Min:
        title = "Min units per document";
        label = "Units";
        break;

      case Mean:
        title = "Average of units per document";
        label = "Units";
        break;

      case Median:
        title = "Median units per document";
        label = "Units";
        break;

      case StandardDesviation:
        title = "Standar desviation of units per document";
        label = "Units";
        break;

      case Variance:
        title = "Variance of units per document";
        label = "Units";
        break;
      
      default:
        title = "";
        label = "";
        break;
    }
    
    for (i = 0; i < this.stats.size(); i++) {

      stat = this.stats.get(i);
      
      switch(selection) {
        
        case Documents:
          this.dataset.addValue(stat.getPeriod().getDocumentsCount(), "Period", stat.getPeriod().getName());
          break;
          
        case Units:
          this.dataset.addValue(stat.getUniqueGroupsCount(), "Period", stat.getPeriod().getName());
          break;
          
        case Max:
          this.dataset.addValue(stat.getMax(), "Period", stat.getPeriod().getName());
          break;
          
        case Min:
          this.dataset.addValue(stat.getMin(), "Period", stat.getPeriod().getName());
          break;
          
        case Mean:
          this.dataset.addValue(stat.getMean(), "Period", stat.getPeriod().getName());
          break;
          
        case Median:
          this.dataset.addValue(stat.getMedian(), "Period", stat.getPeriod().getName());
          break;
          
        case StandardDesviation:
          this.dataset.addValue(stat.getStandardDesviation(), "Period", stat.getPeriod().getName());
          break;
          
        case Variance:
          this.dataset.addValue(stat.getVariance(), "Period", stat.getPeriod().getName());
          break;
      }
    }

    chart = ChartFactory.createBarChart(title, "", 
            label, dataset, PlotOrientation.VERTICAL, false,
            true, false);
    
    chart.getCategoryPlot().getDomainAxis().setCategoryLabelPositions(CategoryLabelPositions.STANDARD);

    chartPanel.setChart(chart);
    chart.fireChartChanged();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statButtonGroup = new javax.swing.ButtonGroup();
        documentsCountRadioButton = new javax.swing.JRadioButton();
        unitsCountRadioButton = new javax.swing.JRadioButton();
        maxRadioButton = new javax.swing.JRadioButton();
        minRadioButton = new javax.swing.JRadioButton();
        meanRadioButton = new javax.swing.JRadioButton();
        medianRadioButton = new javax.swing.JRadioButton();
        standarDesviationRadioButton = new javax.swing.JRadioButton();
        varianceRadioButton = new javax.swing.JRadioButton();
        barChartPanel = new javax.swing.JPanel();

        statButtonGroup.add(documentsCountRadioButton);
        documentsCountRadioButton.setText("Documents");
        documentsCountRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentsCountRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(unitsCountRadioButton);
        unitsCountRadioButton.setText("Unique units");
        unitsCountRadioButton.setToolTipText("Unique units of analysis");
        unitsCountRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitsCountRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(maxRadioButton);
        maxRadioButton.setText("Max");
        maxRadioButton.setToolTipText("Max unit per document");
        maxRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(minRadioButton);
        minRadioButton.setText("Min");
        minRadioButton.setToolTipText("Min unit per document");
        minRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(meanRadioButton);
        meanRadioButton.setText("Average");
        meanRadioButton.setToolTipText("Average number of unit per document");
        meanRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meanRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(medianRadioButton);
        medianRadioButton.setText("Median");
        medianRadioButton.setToolTipText("Median of unit per document");
        medianRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medianRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(standarDesviationRadioButton);
        standarDesviationRadioButton.setText("Standard desviation");
        standarDesviationRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standarDesviationRadioButtonActionPerformed(evt);
            }
        });

        statButtonGroup.add(varianceRadioButton);
        varianceRadioButton.setText("Variance");
        varianceRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varianceRadioButtonActionPerformed(evt);
            }
        });

        barChartPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minRadioButton)
                    .addComponent(meanRadioButton)
                    .addComponent(documentsCountRadioButton)
                    .addComponent(unitsCountRadioButton)
                    .addComponent(medianRadioButton)
                    .addComponent(standarDesviationRadioButton)
                    .addComponent(varianceRadioButton)
                    .addComponent(maxRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(documentsCountRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unitsCountRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maxRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(meanRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medianRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(standarDesviationRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(varianceRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(barChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

  /**
   * 
   * @param evt 
   */
  private void documentsCountRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentsCountRadioButtonActionPerformed
    
    refreshChart(SelectedChart.Documents);
  }//GEN-LAST:event_documentsCountRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void unitsCountRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitsCountRadioButtonActionPerformed
    refreshChart(SelectedChart.Units);
  }//GEN-LAST:event_unitsCountRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void maxRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxRadioButtonActionPerformed
    refreshChart(SelectedChart.Max);
  }//GEN-LAST:event_maxRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void minRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minRadioButtonActionPerformed
    refreshChart(SelectedChart.Min);
  }//GEN-LAST:event_minRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void meanRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meanRadioButtonActionPerformed
    refreshChart(SelectedChart.Mean);
  }//GEN-LAST:event_meanRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void medianRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medianRadioButtonActionPerformed
    refreshChart(SelectedChart.Median);
  }//GEN-LAST:event_medianRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void standarDesviationRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standarDesviationRadioButtonActionPerformed
    refreshChart(SelectedChart.StandardDesviation);
  }//GEN-LAST:event_standarDesviationRadioButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void varianceRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varianceRadioButtonActionPerformed
    refreshChart(SelectedChart.Variance);
  }//GEN-LAST:event_varianceRadioButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barChartPanel;
    private javax.swing.JRadioButton documentsCountRadioButton;
    private javax.swing.JRadioButton maxRadioButton;
    private javax.swing.JRadioButton meanRadioButton;
    private javax.swing.JRadioButton medianRadioButton;
    private javax.swing.JRadioButton minRadioButton;
    private javax.swing.JRadioButton standarDesviationRadioButton;
    private javax.swing.ButtonGroup statButtonGroup;
    private javax.swing.JRadioButton unitsCountRadioButton;
    private javax.swing.JRadioButton varianceRadioButton;
    // End of variables declaration//GEN-END:variables
  private ArrayList<StatisticPerPeriod> stats;
  private ChartPanel chartPanel;
  private JFreeChart chart;
  private DefaultCategoryDataset dataset;
  private enum SelectedChart {Documents, Units, Max, Min, Mean, Median, StandardDesviation, Variance};
}
