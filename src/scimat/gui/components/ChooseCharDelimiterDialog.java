/*
 * ChooseCharDelimiterDialog.java
 *
 * Created on 06-feb-2012, 20:25:59
 */
package scimat.gui.components;

import java.awt.Color;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author mjcobo
 */
public class ChooseCharDelimiterDialog extends javax.swing.JDialog {

  /** Creates new form ChooseCharDelimiterDialog */
  public ChooseCharDelimiterDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    
    this.charDelimiterTextField.getDocument().addDocumentListener(new DocumentListener() {

      public void insertUpdate(DocumentEvent e) {
        checkFindText();
      }

      public void removeUpdate(DocumentEvent e) {
        checkFindText();
      }

      public void changedUpdate(DocumentEvent e) {
        checkFindText();
      }
    });
  }
  /**
   * 
   */
  public void checkFindText() {
  
    String fullDelimiter, message;
    boolean valid;
    
    fullDelimiter = this.charDelimiterTextField.getText();
    
    if (fullDelimiter.isEmpty()) {
    
      message = "You must provide a char delimiter.";
      valid = false;
      
    } else if ((fullDelimiter.length() > 2) || (fullDelimiter.length() == 2 && fullDelimiter.charAt(0) != '\\')) {
      
      message = "You must provide only a char delimiter.";
      valid = false;
      
    } else {
    
      message = "";
      valid = true;
    }
    
    if (! valid) {
    
      messageErrorLabel.setText(message);
      messageErrorLabel.setForeground(Color.RED);
      
    } else {
    
      messageErrorLabel.setText("Correct arguments!");
      messageErrorLabel.setForeground(new Color(0, 99, 0));
    }
    
    this.acceptButton.setEnabled(valid);
  }
  
  /**
   * 
   * @return 
   */
  public char getCharDelimiter() {
  
    String fullDelimiter;
    char c;
    
    fullDelimiter = this.charDelimiterTextField.getText();
    
    if (fullDelimiter.length() == 1) {
    
      c = fullDelimiter.charAt(0);
      
    } else {
    
      switch (fullDelimiter.charAt(1)) {
      
        case 't': c = '\t';
                  break;
          
        case 'b': c = '\b';
                  break;
          
        case 'n': c = '\n';
                  break;
          
        case 'r': c = '\r';
                  break;
          
        case 'f': c = '\f';
                  break;
          
        case '\'': c = '\'';
                  break;
          
        case '"': c = '\"';
                  break;
          
        default: c = '\\';
                  break;
      }
    }
    
    return c;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        charDelimiterLabel = new javax.swing.JLabel();
        charDelimiterTextField = new javax.swing.JTextField();
        separator = new javax.swing.JSeparator();
        acceptButton = new javax.swing.JButton();
        errorPanel = new javax.swing.JPanel();
        messageErrorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        charDelimiterLabel.setText("Char delimiter:");

        charDelimiterTextField.setText(";");

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorPanelLayout = new javax.swing.GroupLayout(errorPanel);
        errorPanel.setLayout(errorPanelLayout);
        errorPanelLayout.setHorizontalGroup(
            errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorPanelLayout.createSequentialGroup()
                .addComponent(messageErrorLabel)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        errorPanelLayout.setVerticalGroup(
            errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageErrorLabel)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acceptButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(charDelimiterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charDelimiterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                    .addComponent(separator, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(errorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charDelimiterLabel)
                    .addComponent(charDelimiterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acceptButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  /**
   * 
   * @param evt 
   */
  private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
    
    this.charDelimiter = getCharDelimiter();
    
    dispose();
  }//GEN-LAST:event_acceptButtonActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel charDelimiterLabel;
    private javax.swing.JTextField charDelimiterTextField;
    private javax.swing.JPanel errorPanel;
    private javax.swing.JLabel messageErrorLabel;
    private javax.swing.JSeparator separator;
    // End of variables declaration//GEN-END:variables

  private char charDelimiter = ',';
}
