/*
 * GlobalReplaceDialog.java
 *
 * Created on 22-ene-2012, 16:56:35
 */
package scimat.gui.components.globalreplace;

import java.awt.Color;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import scimat.gui.components.IncorrectDataObserver;

/**
 *
 * @author mjcobo
 */
public class GlobalReplaceDialog extends javax.swing.JDialog implements IncorrectDataObserver {

  /** Creates new form GlobalReplaceDialog */
  public GlobalReplaceDialog(java.awt.Frame parent, GlobalReplaceSelectFieldsPanel globalReplaceDoActionPanel) {
    
    super(parent, true);
    
    initComponents();
    
    this.globalReplaceDoActionPanel = globalReplaceDoActionPanel;
    
    this.selectEntityFieldsScrollPane.setViewportView(this.globalReplaceDoActionPanel);
    
    this.findTextField.getDocument().addDocumentListener(new DocumentListener() {

      public void insertUpdate(DocumentEvent e) {
        checkFindText();
      }

      public void removeUpdate(DocumentEvent e) {
        checkFindText();
      }

      public void changedUpdate(DocumentEvent e) {
        checkFindText();
      }
    });
    
    this.globalReplaceDoActionPanel.addIncorrectDataObserver(this);
  }
  
  /**
   * 
   */
  public void checkFindText() {
  
    String findText;
    
    findText = this.findTextField.getText();
    
    if (findText.isEmpty()) {
    
      updateErrorMessage("You must provide a find expression");
      validFindText = false;
      
    } else {
    
      try {
      
      Pattern.compile(findText);
      
      updateErrorMessage("");
      validFindText = true;
      
      } catch (PatternSyntaxException exception) {
      
        updateErrorMessage("Expression syntax incorrect.");
        validFindText = false;
      }
    }
    
    enableAcceptButton();
  }

  /**
   * 
   * @param correct
   * @param message 
   */
  public void incorrectData(boolean correct, String message) {
    
    validSelectedFields = correct;
    
    updateErrorMessage(message);
    
    enableAcceptButton();
  }
  
  /**
   * 
   */
  private void enableAcceptButton() {

    this.acceptButton.setEnabled(this.validFindText  && 
            this.validSelectedFields);
  }
  
  /**
   * 
   * @param message 
   */
  private void updateErrorMessage(String message) {
    
    if ((! this.validFindText) || (! this.validSelectedFields)) {
    
      messageErrorLabel.setText(message);
      messageErrorLabel.setForeground(Color.RED);
      
    } else {
    
      messageErrorLabel.setText("Correct arguments!");
      messageErrorLabel.setForeground(new Color(0, 99, 0));
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectEntityFieldsScrollPane = new javax.swing.JScrollPane();
        findLabel = new javax.swing.JLabel();
        findTextField = new javax.swing.JTextField();
        replaceLabel = new javax.swing.JLabel();
        replaceTextField = new javax.swing.JTextField();
        separator = new javax.swing.JSeparator();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        errorPanel = new javax.swing.JPanel();
        messageErrorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        selectEntityFieldsScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Entity fields"));

        findLabel.setText("Find What:");

        replaceLabel.setText("Replace With:");

        acceptButton.setText("Accept");
        acceptButton.setEnabled(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorPanelLayout = new javax.swing.GroupLayout(errorPanel);
        errorPanel.setLayout(errorPanelLayout);
        errorPanelLayout.setHorizontalGroup(
            errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorPanelLayout.createSequentialGroup()
                .addComponent(messageErrorLabel)
                .addContainerGap(380, Short.MAX_VALUE))
        );
        errorPanelLayout.setVerticalGroup(
            errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageErrorLabel)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectEntityFieldsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(findLabel)
                        .addGap(18, 18, 18)
                        .addComponent(findTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(replaceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replaceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                    .addComponent(errorPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(acceptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectEntityFieldsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findLabel)
                    .addComponent(findTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(replaceLabel)
                    .addComponent(replaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  /**
   * 
   * @param evt 
   */
  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  /**
   * 
   * @param evt 
   */
  private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
    
    this.globalReplaceDoActionPanel.doGlobalReplaceAction(this.findTextField.getText(), 
            this.replaceTextField.getText());
    
    dispose();
  }//GEN-LAST:event_acceptButtonActionPerformed
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel errorPanel;
    private javax.swing.JLabel findLabel;
    private javax.swing.JTextField findTextField;
    private javax.swing.JLabel messageErrorLabel;
    private javax.swing.JLabel replaceLabel;
    private javax.swing.JTextField replaceTextField;
    private javax.swing.JScrollPane selectEntityFieldsScrollPane;
    private javax.swing.JSeparator separator;
    // End of variables declaration//GEN-END:variables
  private GlobalReplaceSelectFieldsPanel globalReplaceDoActionPanel;
  private boolean validFindText = false;
  private boolean validSelectedFields = false;
}
