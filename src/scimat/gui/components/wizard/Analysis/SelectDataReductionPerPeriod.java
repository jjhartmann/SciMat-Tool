/*
 * SelectDataReductionPerPeriod.java
 *
 * Created on 04-abr-2011, 15:48:20
 */
package scimat.gui.components.wizard.Analysis;

import java.util.ArrayList;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import scimat.model.knowledgebase.entity.Period;

/**
 *
 * @author mjcobo
 */
public class SelectDataReductionPerPeriod extends javax.swing.JPanel {

  /** Creates new form SelectDataReductionPerPeriod */
  public SelectDataReductionPerPeriod() {
    initComponents();
  }

  /**
   * 
   * @param periods 
   */
  public void refresh(ArrayList<Period> periods) {

    int i;
    SelectPeriodDataReductionMethodPanel selectPeriodDataReductionMethodPanel;

    if (periods != null) {

      this.selectPeriodDataReductionMethodPanels = new SelectPeriodDataReductionMethodPanel[periods.size()];

      for (i = 0; i < periods.size(); i++) {

        selectPeriodDataReductionMethodPanel = new SelectPeriodDataReductionMethodPanel();
        selectPeriodDataReductionMethodPanel.setTitleToMainPanel(periods.get(i).getName());
        selectPeriodDataReductionMethodPanel.refresh();

        this.selectPeriodDataReductionMethodPanels[i] = selectPeriodDataReductionMethodPanel;
      }

      this.removeAll();
      
      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
      this.setLayout(layout);

      ParallelGroup parallelGroup;
      SequentialGroup sequentialGroup;


      parallelGroup = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);

      for (i = 0; i < this.selectPeriodDataReductionMethodPanels.length; i++) {

        parallelGroup = parallelGroup.addComponent(selectPeriodDataReductionMethodPanels[i],
                javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE);
      }

      layout.setHorizontalGroup(parallelGroup);


      parallelGroup = layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
      sequentialGroup = layout.createSequentialGroup();

      for (i = 0; i < this.selectPeriodDataReductionMethodPanels.length; i++) {

        sequentialGroup = sequentialGroup.addComponent(selectPeriodDataReductionMethodPanels[i],
                javax.swing.GroupLayout.PREFERRED_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE);

        if (i < (this.selectPeriodDataReductionMethodPanels.length - 1)) {
          sequentialGroup.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
        }
      }

      parallelGroup.addGroup(sequentialGroup);
      layout.setVerticalGroup(parallelGroup);
    }
    
    /*repaint();
    validate();*/
  }

  /**
   *
   * @return
   */
  public boolean isFrequencyDataReductionSelected(int period) {

    return this.selectPeriodDataReductionMethodPanels[period].isFrequencyDataReductionSelected();
  }

  /**
   *
   * @return
   */
  public int getMinFrequencyDataReductionSelected(int period) {

    return (Integer)this.selectPeriodDataReductionMethodPanels[period].getMinFrequencyDataReductionSelected();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 426, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 228, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
  private SelectPeriodDataReductionMethodPanel[] selectPeriodDataReductionMethodPanels;
}
