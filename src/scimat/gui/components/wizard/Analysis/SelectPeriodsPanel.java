/*
 * SelectPeriodsPanel.java
 *
 * Created on 02-abr-2011, 17:09:31
 */
package scimat.gui.components.wizard.Analysis;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import scimat.gui.components.ErrorDialogManager;
import scimat.gui.components.itemslist.GenericDynamicItemsListPanel;
import scimat.gui.components.itemslist.GenericSelectManyItemsPanel;
import scimat.gui.components.observer.ElementsCountObserver;
import scimat.gui.components.tablemodel.PeriodsTableModel;
import scimat.gui.components.wizard.GenericWizardStepPanel;
import scimat.model.knowledgebase.entity.Period;
import scimat.model.knowledgebase.exception.KnowledgeBaseException;
import scimat.project.CurrentProject;

/**
 *
 * @author mjcobo
 */
public class SelectPeriodsPanel extends GenericWizardStepPanel implements ElementsCountObserver {

  /** Creates new form SelectPeriodsPanel */
  public SelectPeriodsPanel() {

    this.genericSelectManyItemsPanel = new GenericSelectManyItemsPanel<Period>(new GenericDynamicItemsListPanel<Period>(new PeriodsTableModel()), 
                                                                                   new GenericDynamicItemsListPanel<Period>(new PeriodsTableModel()));

    initComponents();

    this.genericSelectManyItemsPanel.addTargetElementsCountObserver(this);

    this.add(this.genericSelectManyItemsPanel);
  }

  /**
   * 
   */
  @Override
  public void refresh() {

    try {
      
      this.genericSelectManyItemsPanel.refreshData(CurrentProject.getInstance().getFactoryDAO().getPeriodDAO().getPeriods());

    } catch (KnowledgeBaseException e) {

      ErrorDialogManager.getInstance().showException(e);
    }
  }

  @Override
  public void fireIncorrectDataObservers() {

    boolean correct = true;
    String message = "";

    if (this.targetElementCount == 0) {

      correct = false;
      message = "You need to select a set of periods.";
    }

    notifyIncorrectDataObservers(correct, message);
  }

  /**
   * 
   * @param newElementsCount
   */
  public void elementsCountChanged(int newElementsCount) {

    this.targetElementCount = newElementsCount;
    fireIncorrectDataObservers();
  }

  /**
   * 
   * @return
   */
  public ArrayList<Period> getSelectedPeriods() {

    ArrayList<Period> periods = new ArrayList<Period>();
    
    periods = this.genericSelectManyItemsPanel.getTargetItems();

    Collections.sort(periods, new Comparator<Period>() {

      @Override
      public int compare(Period o1, Period o2) {

        return Integer.valueOf(o1.getPosition()).compareTo(o2.getPosition());
      }
    });

    return  periods;
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
  private GenericSelectManyItemsPanel<Period> genericSelectManyItemsPanel;
  private int targetElementCount;
}
