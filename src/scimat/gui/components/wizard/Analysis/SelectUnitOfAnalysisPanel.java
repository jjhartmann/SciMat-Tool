/*
 * SelectUnitOfAnalysisPanel.java
 *
 * Created on 03-abr-2011, 17:52:13
 */
package scimat.gui.components.wizard.Analysis;

import javax.swing.ButtonGroup;
import scimat.analysis.UnitOfAnalysisEnum;
import scimat.gui.components.wizard.GenericWizardStepPanel;

/**
 *
 * @author mjcobo
 */
public class SelectUnitOfAnalysisPanel extends GenericWizardStepPanel {

  /** Creates new form SelectUnitOfAnalysisPanel */
  public SelectUnitOfAnalysisPanel() {
    initComponents();

    //unitOfAnalysisButtonGroup.
  }

  /**
   * 
   */
  @Override
  public void refresh() {
    
    this.authorWordsCheckBox.setEnabled(false);
    this.sourceWordsCheckBox.setEnabled(false);
    this.addedWordsCheckBox.setEnabled(false);
    
    this.authorWordsCheckBox.setSelected(false);
    this.sourceWordsCheckBox.setSelected(false);
    this.addedWordsCheckBox.setSelected(false);
    
    this.unitOfAnalysisButtonGroup.clearSelection();
       
    //this.repaint();
    //this.validate();
    
    fireIncorrectDataObservers();
  }

  /**
   * 
   */
  @Override
  public void fireIncorrectDataObservers() {

    if (this.unitOfAnalysisButtonGroup.getSelection() != null) {

      if (this.wordsRadioButton.isSelected()) {

        if (this.authorWordsCheckBox.isSelected() ||
            this.sourceWordsCheckBox.isSelected() ||
            this.addedWordsCheckBox.isSelected()) {

          notifyIncorrectDataObservers(true, "");

        } else {

          notifyIncorrectDataObservers(false, "A kinds of word must be selected");
        }

      } else {

        notifyIncorrectDataObservers(true, "");
      }

    } else {

      notifyIncorrectDataObservers(false, "A unit of analysis must be selected.");
    }
  }

  /**
   * 
   * @return
   */
  public UnitOfAnalysisEnum getSelectedUnitOfAnalysis() {

    UnitOfAnalysisEnum unitOfAnalyss = null;

    if (this.authorsRadioButton.isSelected()) {

      unitOfAnalyss = UnitOfAnalysisEnum.Authors;

    } else if (this.wordsRadioButton.isSelected()) {

      unitOfAnalyss = UnitOfAnalysisEnum.Words;

    } else if (this.referencesRadioButton.isSelected()) {

      unitOfAnalyss = UnitOfAnalysisEnum.References;

    } else if (this.authorReferencesRadioButton.isSelected()) {

      unitOfAnalyss = UnitOfAnalysisEnum.AuthorsReference;

    } else if (this.sourceReferencesRadioButton.isSelected()) {

      unitOfAnalyss = UnitOfAnalysisEnum.ReferenceSources;

    }

    return unitOfAnalyss;
  }

  /**
   * 
   * @return
   */
  public boolean isAuthorWordsSelected() {

    return this.authorWordsCheckBox.isSelected();
  }

  /**
   *
   * @return
   */
  public boolean isSourceWordsSelected() {

    return this.sourceWordsCheckBox.isSelected();
  }

  /**
   *
   * @return
   */
  public boolean isAddedWordsSelected() {

    return this.addedWordsCheckBox.isSelected();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unitOfAnalysisButtonGroup = new javax.swing.ButtonGroup();
        authorsRadioButton = new javax.swing.JRadioButton();
        wordsRadioButton = new javax.swing.JRadioButton();
        authorWordsCheckBox = new javax.swing.JCheckBox();
        sourceWordsCheckBox = new javax.swing.JCheckBox();
        addedWordsCheckBox = new javax.swing.JCheckBox();
        referencesRadioButton = new javax.swing.JRadioButton();
        authorReferencesRadioButton = new javax.swing.JRadioButton();
        sourceReferencesRadioButton = new javax.swing.JRadioButton();

        unitOfAnalysisButtonGroup.add(authorsRadioButton);
        authorsRadioButton.setText("Authors");
        authorsRadioButton.setDoubleBuffered(true);
        authorsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorsRadioButtonActionPerformed(evt);
            }
        });

        unitOfAnalysisButtonGroup.add(wordsRadioButton);
        wordsRadioButton.setText("Words");
        wordsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordsRadioButtonActionPerformed(evt);
            }
        });

        authorWordsCheckBox.setText("Author's words");
        authorWordsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorWordsCheckBoxActionPerformed(evt);
            }
        });

        sourceWordsCheckBox.setText("Source's words");
        sourceWordsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceWordsCheckBoxActionPerformed(evt);
            }
        });

        addedWordsCheckBox.setText("Added words");
        addedWordsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addedWordsCheckBoxActionPerformed(evt);
            }
        });

        unitOfAnalysisButtonGroup.add(referencesRadioButton);
        referencesRadioButton.setText("References");
        referencesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                referencesRadioButtonActionPerformed(evt);
            }
        });

        unitOfAnalysisButtonGroup.add(authorReferencesRadioButton);
        authorReferencesRadioButton.setText("Authors-reference");
        authorReferencesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorReferencesRadioButtonActionPerformed(evt);
            }
        });

        unitOfAnalysisButtonGroup.add(sourceReferencesRadioButton);
        sourceReferencesRadioButton.setText("Sources-reference");
        sourceReferencesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceReferencesRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(authorsRadioButton)
                    .addComponent(wordsRadioButton)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(authorWordsCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sourceWordsCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addedWordsCheckBox))
                    .addComponent(referencesRadioButton)
                    .addComponent(authorReferencesRadioButton)
                    .addComponent(sourceReferencesRadioButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(authorsRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordsRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorWordsCheckBox)
                    .addComponent(sourceWordsCheckBox)
                    .addComponent(addedWordsCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(referencesRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(authorReferencesRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sourceReferencesRadioButton))
        );
    }// </editor-fold>//GEN-END:initComponents

  /**
   * 
   * @param evt
   */
  private void authorsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorsRadioButtonActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_authorsRadioButtonActionPerformed

  private void wordsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordsRadioButtonActionPerformed

    fireIncorrectDataObservers();

    if (this.wordsRadioButton.isSelected()) {

      this.authorWordsCheckBox.setEnabled(true);
      this.sourceWordsCheckBox.setEnabled(true);
      this.addedWordsCheckBox.setEnabled(true);

    } else {

      this.authorWordsCheckBox.setEnabled(false);
      this.sourceWordsCheckBox.setEnabled(false);
      this.addedWordsCheckBox.setEnabled(false);
    }
  }//GEN-LAST:event_wordsRadioButtonActionPerformed

  private void referencesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_referencesRadioButtonActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_referencesRadioButtonActionPerformed

  private void authorReferencesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorReferencesRadioButtonActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_authorReferencesRadioButtonActionPerformed

  private void sourceReferencesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceReferencesRadioButtonActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_sourceReferencesRadioButtonActionPerformed

  private void authorWordsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorWordsCheckBoxActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_authorWordsCheckBoxActionPerformed

  private void sourceWordsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceWordsCheckBoxActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_sourceWordsCheckBoxActionPerformed

  private void addedWordsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addedWordsCheckBoxActionPerformed
    fireIncorrectDataObservers();
  }//GEN-LAST:event_addedWordsCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addedWordsCheckBox;
    private javax.swing.JRadioButton authorReferencesRadioButton;
    private javax.swing.JCheckBox authorWordsCheckBox;
    private javax.swing.JRadioButton authorsRadioButton;
    private javax.swing.JRadioButton referencesRadioButton;
    private javax.swing.JRadioButton sourceReferencesRadioButton;
    private javax.swing.JCheckBox sourceWordsCheckBox;
    private javax.swing.ButtonGroup unitOfAnalysisButtonGroup;
    private javax.swing.JRadioButton wordsRadioButton;
    // End of variables declaration//GEN-END:variables
}
